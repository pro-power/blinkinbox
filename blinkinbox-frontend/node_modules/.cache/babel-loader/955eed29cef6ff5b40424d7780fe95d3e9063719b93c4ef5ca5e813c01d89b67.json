{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.REACT_APP_API_BASE_URL;const api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});export const createEmail=async username=>{try{const response=await api.post('/emails',{username});return response.data;}catch(error){console.error('Error creating email:',error);throw error;}};export const getEmails=async username=>{try{const response=await api.get(`/emails/${username}`);return response.data;}catch(error){console.error('Error fetching emails:',error);throw error;}};export const getEmailDetails=async(username,emailId)=>{try{const response=await api.get(`/emails/${username}/${emailId}`);return response.data;}catch(error){console.error('Error fetching email details:',error);throw error;}};export const deleteEmail=async(username,emailId)=>{try{const response=await api.delete(`/emails/${username}/${emailId}`);return response.data;}catch(error){console.error('Error deleting email:',error);throw error;}};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","api","create","baseURL","headers","createEmail","username","response","post","data","error","console","getEmails","get","getEmailDetails","emailId","deleteEmail","delete"],"sources":["/Users/georgieeee/Documents/projects/blinkinbox/blinkinbox-frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  }\n});\n\nexport const createEmail = async (username) => {\n  try {\n    const response = await api.post('/emails', { username });\n    return response.data;\n  } catch (error) {\n    console.error('Error creating email:', error);\n    throw error;\n  }\n};\n\nexport const getEmails = async (username) => {\n  try {\n    const response = await api.get(`/emails/${username}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching emails:', error);\n    throw error;\n  }\n};\n\nexport const getEmailDetails = async (username, emailId) => {\n  try {\n    const response = await api.get(`/emails/${username}/${emailId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching email details:', error);\n    throw error;\n  }\n};\n\nexport const deleteEmail = async (username, emailId) => {\n  try {\n    const response = await api.delete(`/emails/${username}/${emailId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting email:', error);\n    throw error;\n  }\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,YAAY,CAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,CAEvD,KAAM,CAAAC,GAAG,CAAGL,KAAK,CAACM,MAAM,CAAC,CACvBC,OAAO,CAAEN,YAAY,CACrBO,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAC,WAAW,CAAG,KAAO,CAAAC,QAAQ,EAAK,CAC7C,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAN,GAAG,CAACO,IAAI,CAAC,SAAS,CAAE,CAAEF,QAAS,CAAC,CAAC,CACxD,MAAO,CAAAC,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC7C,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,MAAO,MAAM,CAAAE,SAAS,CAAG,KAAO,CAAAN,QAAQ,EAAK,CAC3C,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAN,GAAG,CAACY,GAAG,CAAC,WAAWP,QAAQ,EAAE,CAAC,CACrD,MAAO,CAAAC,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9C,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,MAAO,MAAM,CAAAI,eAAe,CAAG,KAAAA,CAAOR,QAAQ,CAAES,OAAO,GAAK,CAC1D,GAAI,CACF,KAAM,CAAAR,QAAQ,CAAG,KAAM,CAAAN,GAAG,CAACY,GAAG,CAAC,WAAWP,QAAQ,IAAIS,OAAO,EAAE,CAAC,CAChE,MAAO,CAAAR,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,CAAEA,KAAK,CAAC,CACrD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,MAAO,MAAM,CAAAM,WAAW,CAAG,KAAAA,CAAOV,QAAQ,CAAES,OAAO,GAAK,CACtD,GAAI,CACF,KAAM,CAAAR,QAAQ,CAAG,KAAM,CAAAN,GAAG,CAACgB,MAAM,CAAC,WAAWX,QAAQ,IAAIS,OAAO,EAAE,CAAC,CACnE,MAAO,CAAAR,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC7C,KAAM,CAAAA,KAAK,CACb,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}