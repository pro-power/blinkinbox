{"ast":null,"code":"var _jsxFileName = \"/Users/georgieeee/Documents/projects/blinkinbox/blinkinbox-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Navbar from './components/Navbar';\nimport EmailGenerator from './components/EmailGenerator';\nimport Inbox from './components/Inbox';\nimport EmailDetail from './components/EmailDetail';\nimport { useEmailService } from './hooks/useEmailService';\nimport './styles/responsive.css'; // Import the responsive CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    emailPrefix,\n    setEmailPrefix,\n    generatedEmail,\n    generateEmail,\n    copyEmail,\n    copied,\n    emails,\n    loading,\n    refreshInbox,\n    error\n  } = useEmailService();\n  const [selectedEmailId, setSelectedEmailId] = useState(null);\n\n  // Extract username from generated email\n  const username = generatedEmail ? generatedEmail.split('@')[0] : '';\n\n  // Handle email selection\n  const handleEmailSelect = emailId => {\n    setSelectedEmailId(emailId);\n  };\n\n  // Handle back to inbox\n  const handleBackToInbox = () => {\n    setSelectedEmailId(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section\",\n        children: /*#__PURE__*/_jsxDEV(EmailGenerator, {\n          emailPrefix: emailPrefix,\n          setEmailPrefix: setEmailPrefix,\n          generatedEmail: generatedEmail,\n          generateEmail: generateEmail,\n          copyEmail: copyEmail,\n          copied: copied,\n          error: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), generatedEmail && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section\",\n        children: selectedEmailId ? /*#__PURE__*/_jsxDEV(EmailDetail, {\n          username: username,\n          emailId: selectedEmailId,\n          onBack: handleBackToInbox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Inbox, {\n          emails: emails,\n          loading: loading,\n          refreshInbox: refreshInbox,\n          onEmailSelect: handleEmailSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gWYbYmgxLcro7SWCHp1BN7htmB4=\", false, function () {\n  return [useEmailService];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","EmailGenerator","Inbox","EmailDetail","useEmailService","jsxDEV","_jsxDEV","App","_s","emailPrefix","setEmailPrefix","generatedEmail","generateEmail","copyEmail","copied","emails","loading","refreshInbox","error","selectedEmailId","setSelectedEmailId","username","split","handleEmailSelect","emailId","handleBackToInbox","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onBack","onEmailSelect","_c","$RefreshReg$"],"sources":["/Users/georgieeee/Documents/projects/blinkinbox/blinkinbox-frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Navbar from './components/Navbar';\nimport EmailGenerator from './components/EmailGenerator';\nimport Inbox from './components/Inbox';\nimport EmailDetail from './components/EmailDetail';\nimport { useEmailService } from './hooks/useEmailService';\nimport './styles/responsive.css'; // Import the responsive CSS\n\nfunction App() {\n  const { \n    emailPrefix,\n    setEmailPrefix,\n    generatedEmail, \n    generateEmail,\n    copyEmail,\n    copied,\n    emails,\n    loading,\n    refreshInbox,\n    error\n  } = useEmailService();\n\n  const [selectedEmailId, setSelectedEmailId] = useState(null);\n\n  // Extract username from generated email\n  const username = generatedEmail ? generatedEmail.split('@')[0] : '';\n\n  // Handle email selection\n  const handleEmailSelect = (emailId) => {\n    setSelectedEmailId(emailId);\n  };\n\n  // Handle back to inbox\n  const handleBackToInbox = () => {\n    setSelectedEmailId(null);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <Navbar />\n      <main className=\"container\">\n        <section className=\"section\">\n          <EmailGenerator \n            emailPrefix={emailPrefix}\n            setEmailPrefix={setEmailPrefix}\n            generatedEmail={generatedEmail}\n            generateEmail={generateEmail}\n            copyEmail={copyEmail}\n            copied={copied}\n            error={error}\n          />\n        </section>\n        \n        {generatedEmail && (\n          <section className=\"section\">\n            {selectedEmailId ? (\n              <EmailDetail \n                username={username}\n                emailId={selectedEmailId}\n                onBack={handleBackToInbox}\n              />\n            ) : (\n              <Inbox \n                emails={emails}\n                loading={loading}\n                refreshInbox={refreshInbox}\n                onEmailSelect={handleEmailSelect}\n              />\n            )}\n          </section>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,SAASC,eAAe,QAAQ,yBAAyB;AACzD,OAAO,yBAAyB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM;IACJC,WAAW;IACXC,cAAc;IACdC,cAAc;IACdC,aAAa;IACbC,SAAS;IACTC,MAAM;IACNC,MAAM;IACNC,OAAO;IACPC,YAAY;IACZC;EACF,CAAC,GAAGd,eAAe,CAAC,CAAC;EAErB,MAAM,CAACe,eAAe,EAAEC,kBAAkB,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;;EAE5D;EACA,MAAMsB,QAAQ,GAAGV,cAAc,GAAGA,cAAc,CAACW,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;;EAEnE;EACA,MAAMC,iBAAiB,GAAIC,OAAO,IAAK;IACrCJ,kBAAkB,CAACI,OAAO,CAAC;EAC7B,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9BL,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,oBACEd,OAAA;IAAKoB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BrB,OAAA,CAACN,MAAM;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVzB,OAAA;MAAMoB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACzBrB,OAAA;QAASoB,SAAS,EAAC,SAAS;QAAAC,QAAA,eAC1BrB,OAAA,CAACL,cAAc;UACbQ,WAAW,EAAEA,WAAY;UACzBC,cAAc,EAAEA,cAAe;UAC/BC,cAAc,EAAEA,cAAe;UAC/BC,aAAa,EAAEA,aAAc;UAC7BC,SAAS,EAAEA,SAAU;UACrBC,MAAM,EAAEA,MAAO;UACfI,KAAK,EAAEA;QAAM;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC,EAETpB,cAAc,iBACbL,OAAA;QAASoB,SAAS,EAAC,SAAS;QAAAC,QAAA,EACzBR,eAAe,gBACdb,OAAA,CAACH,WAAW;UACVkB,QAAQ,EAAEA,QAAS;UACnBG,OAAO,EAAEL,eAAgB;UACzBa,MAAM,EAAEP;QAAkB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B,CAAC,gBAEFzB,OAAA,CAACJ,KAAK;UACJa,MAAM,EAAEA,MAAO;UACfC,OAAO,EAAEA,OAAQ;UACjBC,YAAY,EAAEA,YAAa;UAC3BgB,aAAa,EAAEV;QAAkB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC;MACF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM,CACV;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACvB,EAAA,CAlEQD,GAAG;EAAA,QAYNH,eAAe;AAAA;AAAA8B,EAAA,GAZZ3B,GAAG;AAoEZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}